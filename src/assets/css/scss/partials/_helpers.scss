/* helper classes*/

.pull-left{
    margin-left: 0;
}
.pull-right{
	margin-right:0;
}

.hidden{
    display:none;
}

.invisible{
    visibility: hidden;
}

.clearfix{
    @include clearfix;
}

.text-left{
  text-align: left;
}

.text-right{
    text-align: right;
}

.text-center{
    text-align: center;
}

.text-justified{
  text-align: justify;
}

.text-large{
	font-size:1.25em;
}

//image styles
.image{
    max-width: 100%;
    height: auto;
    img{
        max-width: 100%;
        height: auto;
    }

}
.rounded{
    @extend .image;
    border-radius: 1em;
    img{
        border-radius: 1em;
    }
}
.circle{
    @extend .image;
    border-radius: 50%;
    img{
        border-radius: 50%;
    }
}
.thumbnail{
    @extend .image;
    padding:1%;
    border:1px solid #eee;
}

//padding and margins overrides

.margin{
    margin:1em!important;
}

.no-margin{
    margin:0!important;
}
.no-margin-top{
    margin-top:0!important;
}
.no-margin-bottom{
    margin-bottom: 0!important;
}
.margin-top{
    margin-top:2em!important;
}
.margin-bottom{
    margin-bottom:2em!important;
}

.padding{
    padding:1em!important;
}

.no-padding{
    padding:0!important;
}
.no-padding-top{
    padding-top:0!important;
}
.no-padding-bottom{
    padding-bottom:0!important;
}
.padding-top{
    padding-top:2em!important;
}
.padding-bottom{
    padding-bottom:2em!important;
}

//list
.list-none{
    list-style: none;
    padding-left: 0;
}


// hide elements helper
//  - hiding any given breakpoint will also hide at breakpoints below it
@each $key, $value in $bp {
    
    $minMax: if(isLast($bp, $key), 'min', 'max');
    $bpAdd: if(isLast($bp, $key), 1, 0);

    // set breakpoint
    @media only screen and (#{$minMax}-width: $value + $bpAdd) {
        .hide-#{$key} {
            display: none!important;
        }
    }
}

// show elements helper
//  - unlike the hide helper, the show helper only shows the element for a particular breakpoint
//  - breakpoints above and below a targeted breapoint are ignored

[class*='show-'] {
    display:none !important;
}

$previousShowValue: 0;
$previousShowKey: 0;
@each $key, $value in $bp {

    @if (isFirst($bp, $key)) {

        @media only screen and (max-width: $value) {
            .show-#{$key} {
                display: inline-block!important;
                display: initial!important;
            }
        }

    } @else {

        @media only screen and (min-width: $previousShowValue) and (max-width: $value) {
            .show-#{$previousShowKey} {
                display: inline-block!important;
                display: initial!important;
            }
        }

    }

    @if (isLast($bp, $key)) {

        @media only screen and (mim-width: $value + 1px) {
            .show-#{$key} {
                display: inline-block!important;
                display: initial!important;
            }
        }

    }

    $previousShowValue: $value;
    $previousShowKey: $key;

}
