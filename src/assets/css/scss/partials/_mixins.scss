/*Mixins */

//gradient
@mixin gradient($degree, $topColor, $topValue, $bottomColor, $bottomValue){
    background-color:$topColor;
    background-image: linear-gradient($degree, $topColor $topValue, $bottomColor $bottomValue); 
}
 
@mixin clearfix{
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}


//opacity
@mixin opacity($value){
    opacity: $value;
    filter: alpha(opacity=$value*100);
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="$value*100")";
}

//hide text
@mixin hide-text{
    overflow: hidden;
    text-indent: -9999px;
    display: block;
}

//custom bp max - used for hide helpers
@mixin custom-bp-max($width){
    @media only screen and (max-width:$width){
        @content;
    }
}

//custom min breakpoint
@mixin custom-bp-min($width){
    @media only screen and (min-width:$width){
        @content;
    }
}

//min small breakpoint - 320px + 1px
@mixin bp-small-min{
    @media only screen and (min-width: $bp-small){
        @content;
    }
}

//min med breakpoint - 768px + 1px
@mixin bp-med-min{
    @media only screen and (min-width: $bp-med){
        @content;
    }
}

//min large breakpoint - 1024px + 1px
@mixin bp-large-min{
    @media only screen and (min-width: $bp-large + $onepx){
        @content;
    }
}

//min xl breakpoint - 1152px + 1px
@mixin bp-xl-min{
    @media only screen and (min-width: $bp-xl + $onepx){
        @content;
    }
}

//min xxl breakpoint - 1280px + 1px
@mixin bp-xxl-min{
    @media only screen and (min-width: $bp-xxl + $onepx){
        @content;
    }
}