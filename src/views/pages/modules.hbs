<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" id="desktop"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" id="desktop"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9 ie8" id="desktop"> <![endif]-->
<!--[if IE 9]>         <html class="no-js lt-ie10 ie9" id="desktop"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" id="desktop"> <!--<![endif]-->
<head>

	<!-- page title tag -->
	<title>[page title]</title>
	<!-- page meta tags -->
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta name="description" content="" />
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
	<meta name="robots" content="all" />
	<!-- opengraph meta tags -->
	<meta property="og:title" content="" />
	<meta property="og:type" content="" />
	<meta property="og:image" content="" />
	<meta property="og:url" content="" />
	<meta property="og:description" content="" />
	<meta property="og:site_name" content="" />
	<meta property="fb:admins" content="" />
	{{> headFiles}}
</head>
<body>
	<div class='wrapper'>
		{{>header}}
		<div id="body">
			<div class="container clearfix">
				<div class="row">
					<div class="grid-12">
						<h1 class="h1">Mizer Modules</h1>
					</div>
				</div>
                <div class="row">
                    <div class="grid-12 module">
                        <h2>Modules are made up of several SubModules. You can think of Modules as a molecule in <a href='http://bradfrostweb.com/blog/post/atomic-web-design/' target='_blank' title="Atomic Design | Brad Frost">Atomic Design</a>.
                            Modules can be used to quickly prototype a website or build reusable code.</h2>


                        <!-- Creating a module -->
                        <h3 class="h2" id="#creating-module">Creating a Module</h3>
                        <hr />
                        <p class="text-large">The <em>'content'</em> module consists of a heading, paragraph, and link submodules. 
                        	Through Mizer, you can create your own modules with any combination of submodules. Mizer uses JSON to pass parameters to a handlebars
                        	template that decides how the module should be laid out.
                        	Below is an example of how the 'content' module is created and defined:</p>
                        <div class="row">
                        	<div class="grid-xsm-12 grid-sm-9">
                        		
		                        <p>src/views/modules/content.hbs:</p>
		                        <code>
		                        	<span class="t">&lt;div </span><span class="a">class=</span><span class="s">"margin-bottom padding content&#123;&#123;#equals align 'right'&#125;&#125; text-right&#123;&#123;/equals&#125;&#125;"</span><span class="t">&gt;</span><br />

									    <span class="col1 hb">&#123;&#123;$ 'heading' size='h2' content="This is a Content Module"&#125;&#125;</span><br />
									    <span class="t col1">&lt;hr /&gt;</span><br />

									    <span class="col1 hb">&#123;&#123;#if image&#125;&#125;</span><br />
									        <span class="col2 hb">&#123;&#123;$ 'image' classes='rounded'&#125;&#125;</span><br />
									    <span class="col1 hb">&#123;&#123;/if}}</span><br />

									    <span class="col1 hb">&#123;&#123;$ 'paragraph'&#125;&#125;</span><br />
										<span class="col1 hb">&#123;&#123;$ 'link' previous="true" classes="disabled" content="Module Link"&#125;&#125;</span><br />
									<span class="t">&lt;/div&gt;</span>
		                        </code>
                        	</div>
                        	<div class="grid-xsm-12 grid-sm-3">
                        		<p>src/models/modules/content.json</p>
		                        <code>	
		                        	{<br />
										<span class="col1">"name"		   	: "content",</span><br />
										<span class="col1">"id"           	: null,</span><br />
										<span class="col1">"classes"      	: null,</span><br />
										<span class="col1">"align"			: "left",</span><br />
										<span class="col1">"image"			: false</span><br />
									}
		                        </code>
                        	</div>
                        </div>  
                        <!-- / Creating a module -->

                        <!-- Calling a module -->
                        <h3 class="h2" id="#creating-module">Calling a Module</h3>
                        <hr />
                        <p class="text-large">Using the properties of the module outlined above, we can call a module with different configurations. Below, we
                        call a 'content' module, that has a couple of configurations:</p>
                        <div class="row">
	                        <div class="grid-xsm-12 grid-sm-6">
	                        	<p>Mizer Modules are called with the following:</p>
                        		<code>&#123;&#123;mzr 'content'&#125;&#125;</code>
                        		<p>Which gives us a predefined set of our SubModules, such as the below:</p>
                        		{{{mzr 'content'}}}
	                        </div>
	                        <div class="grid-xsm-12 grid-sm-6">
	                        	<p>'content' module with align set to right and image set to true:
	                        	<code>&#123;&#123;mzr 'content' align='right' image='true'&#125;&#125;</code>
	                        	<p>Will return:</p>
		                        {{{mzr 'content' align='right' image='true'}}}
	                        </div>
                        </div>

                        
                        <div class="row">
	                        <div class="grid-xsm-12 grid-sm-6">
	                        	
	                        </div>
	                        <div class="grid-xsm-12 grid-sm-6">
	                        	
	                        </div>
                        </div>
                        <!-- /calling a Module -->

                        <!-- styling a module -->
                        <h3 class="h3">Styling a Module</h3>
                        <hr />
                        <p class="text-large">
                        	For every module, there should also be a seperate Sass file. Whether the file should output it's own individual set of css or comile
                        	into the main.css, is up to you. Each module has it's own Sass file in order to keep the whole project maintainable. Every module should
                        	have a unique class where styles are built off. For example, the 'content' module, has a class of '.content', where all 'content'
                        	styles are built upon, an example below:
                        </p>
                        <p>src/assets/css/scss/modules/_content.scss:</p>
                        <code>
	                        <span class="t">.content{</span><br />
	                        	<span class="t col1">.content-wrapper{</span><br />
	                        		<span class="a col2">width:</span><span class="s">100%</span><span class="a">;</span><br />
	                        	<span class="t col1">}<span><br />
	                        	<span class="t col1">.image-wrapper{</span><br />
	                        		<span class="a col2">width:</span><span class="s">25%</span><span class="a">;</span><br />
	                        	<span class="t col1">}</span><br />
	                        	<span class="t col1">.image-wrapper + .content-wrapper{</span><br />
	                        		<span class="a col2">width:</span><span class="s">75%</span><span class="a">;</span><br />
	                        	<span class="t col1">}<span><br />
	                        <span class="t">}</span>
                        </code>
                        <p><a href="/pages/css/modules" class="link">More on Module Styling <i class="fa fa-angle-right"></i></a></p>
                        <!-- /styling a module -->
                        
                    </div>
                </div>

			</div>
		</div>
		{{>footer}}

	</div>
	{{> bodyFiles}}
</body>
</html>
